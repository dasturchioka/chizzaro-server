// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id           String       @id @unique @default(cuid())
  phone        String       @unique
  fullname     String
  status       ClientStatus
  confirmation Json?
  telegramId   String       @unique
  orders       Order[]
  createdAt    DateTime?    @default(now())
  locations    Location[]
}

model Courier {
  id        String        @id @unique @default(cuid())
  phone     String        @unique
  login     String        @unique
  fullname  String
  status    CourierStatus
  password  String
  orders    Order[]
  createdAt DateTime      @default(now())
}

model Order {
  id          String       @id @unique @default(cuid())
  price       String
  deliveryFee String
  items       Item[]
  location    String
  lat         String
  lng         String
  distance    String // in km
  status      OrderStatus? @default(CREATED)
  client      Client?      @relation(fields: [clientId], references: [id])
  courier     Courier?     @relation(fields: [courierId], references: [id])
  createdAt   DateTime     @default(now())
  clientId    String?
  courierId   String?
}

model Item {
  id          String   @id @unique @default(cuid())
  name        String
  size        String
  price       String
  img         String
  description String?
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  Order       Order?   @relation(fields: [orderId], references: [id])
  sold        Int      @default(0)
  orderId     String?
}

model Location {
  id          String  @id @unique @default(cuid())
  displayName String
  lat         String
  lng         String
  Client      Client? @relation(fields: [clientId], references: [id])
  clientId    String?
}

model Category {
  id        String   @id @unique @default(cuid())
  name      ItemType @unique
  items     Item[]
  createdAt DateTime @default(now())
}

enum ItemType {
  Pizza
  Ichimlik
  Sous
  Gazak
  Dessert
  Burger
  Lavash
  Doner
  Shaurma
  Salat
}

enum OrderStatus {
  CREATED
  COOKING
  COOKED
  ONTHEWAY
  COMPLETED
  CANCELLED_BY_CLIENT
  CANCELLED_BY_COURIER
  CANCELLED_BY_SERVER
}

enum CourierStatus {
  IDLE
  OFFLINE
  BUSY
}

enum ClientStatus {
  IDLE
  OFFLINE
}
